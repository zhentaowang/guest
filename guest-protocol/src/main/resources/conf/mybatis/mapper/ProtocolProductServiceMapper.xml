<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhiweicloud.guest.mapper.ProtocolProductServiceMapper">
  <resultMap id="BaseResultMap" type="com.zhiweicloud.guest.model.ProtocolProductServ">
    <id column="protocol_product_service_id" jdbcType="BIGINT" property="protocolProductServiceId" />
    <result column="airport_code" jdbcType="VARCHAR" property="airportCode" />
    <result column="protocol_product_id" jdbcType="BIGINT" property="protocolProductId" />
    <result column="service_type_allocation_id" jdbcType="BIGINT" property="serviceTypeAllocationId" />
    <result column="service_id" jdbcType="BIGINT" property="serviceId" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="pricing_rule" jdbcType="OTHER" property="pricingRule" />
    <result column="is_pricing" jdbcType="BIT" property="isPricing" />
    <result column="is_prioritized" jdbcType="BIT" property="isPrioritized" />
    <result column="is_availabled" jdbcType="BIT" property="isAvailabled" />
  </resultMap>

  <sql id="Base_Column_List">
    protocol_product_service_id, airport_code, service_type_allocation_id, protocol_product_id, service_id, pricing_rule, is_pricing,
    is_prioritized, is_availabled
  </sql>


  <select id="selectByProtocolProductServiceId" parameterType="map" resultMap="BaseResultMap">
    SELECT s.name
    FROM protocol_product_service as p left join (select serv_id, name from serv where airport_code = #{airportCode,jdbcType=VARCHAR} and is_deleted = 0)
    as s on p.service_id = s.serv_id
    where p.airport_code = #{airportCode,jdbcType=VARCHAR} and p.is_deleted = 0 and p.protocol_product_service_id = #{protocolProductServiceId,jdbcType=BIGINT}
  </select>

  <select id="selectByProtocolProductId" parameterType="map" resultMap="BaseResultMap">
    SELECT protocol_product_service_id, airport_code, service_type_allocation_id, protocol_product_id, service_id, pricing_rule, is_pricing,
    is_prioritized, is_availabled
    FROM protocol_product_service
    where airport_code = #{airportCode,jdbcType=VARCHAR} and is_deleted = 0
    <if test="protocol_product_id != null">
      and protocol_product_id = #{protocolProductId,jdbcType=BIGINT}
    </if>
    <if test="serviceId != null">
      and service_id = #{serviceId,jdbcType=BIGINT}
    </if>
  </select>

  <select id="deleteByIdAndAirportCode" parameterType="map">
    update protocol_product_service set is_deleted = 1 where protocol_product_id not in (${ids00}) and airport_code = #{airportCode,jdbcType=VARCHAR}
  </select>
  <update id="updateByIdAndAirportCode" parameterType="com.zhiweicloud.guest.model.ProtocolProductServ">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update protocol_product_service
    <set>
      <if test="pricingRule != null">
        pricing_rule = #{pricingRule,jdbcType=VARCHAR},
      </if>
      <if test="isPricing != null">
        is_pricing = #{isPricing,jdbcType=BIT},
      </if>
      <if test="isPrioritized != null">
        is_prioritized = #{isPrioritized,jdbcType=BIT},
      </if>
      <if test="isAvailabled != null">
        is_availabled = #{isAvailabled,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=SMALLINT},
      </if>
      update_time = CURRENT_TIMESTAMP
    </set>
    where airport_code = #{airportCode,jdbcType=VARCHAR} and protocol_product_service_id = #{protocolProductServiceId,jdbcType=BIGINT}
  </update>
  <select id="getServiceMenuList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select p.service_type_allocation_id, s.category from protocol_product_service as p
    left join (select service_type_allocation_id, category from service_type_allocation
    where is_deleted = 0 and airport_code = #{airportCode,jdbcType=VARCHAR}) as s
    on p.service_type_allocation_id = s.service_type_allocation_id
    where p.is_deleted = 0 and p.protocol_product_id = #{protocolProductId,jdbcType=BIGINT} and p.airport_code = #{airportCode,jdbcType=VARCHAR} group by s.category
  </select>

  <select id="getServiceTypeDropdownList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select p.service_type_allocation_id, s.type from protocol_product_service as p
    right join (select service_type_allocation_id, type from service_type_allocation
    where is_deleted = 0 and airport_code = #{airportCode,jdbcType=VARCHAR}
    <if test="category != null">
      and category = #{category,jdbcType=VARCHAR}
    </if>) as s
    on p.service_type_allocation_id = s.service_type_allocation_id
    where p.is_deleted = 0 and p.protocol_product_id = #{protocolProductId,jdbcType=BIGINT} and p.airport_code = #{airportCode,jdbcType=VARCHAR}
    group by p.service_type_allocation_id
  </select>
  <select id="getListByConidition" parameterType="com.zhiweicloud.guest.pageUtil.BasePagination" resultMap="BaseResultMap">
    select p.protocol_product_service_id, p.airport_code, s.no, s.name, p.pricing_rule, p.is_pricing, p.is_prioritized, p.is_availabled
    from protocol_product_service as p left join
    (select serv_id, no, name from v_serv
    where airport_code = #{criteria.airportCode,jdbcType=VARCHAR} and service_type_allocation_id = #{criteria.typeId,jdbcType=BIGINT} and is_deleted = 0) as s
    on p.service_id = s.serv_id
    where p.airport_code = #{criteria.airportCode,jdbcType=VARCHAR} and p.service_type_allocation_id = #{criteria.typeId,jdbcType=BIGINT} and p.is_deleted = 0
     and p.protocol_product_id = #{criteria.protocolProductId,jdbcType=BIGINT}
  </select>

  <select id="getServiceDropDownBoxByParam" parameterType="map" resultMap="BaseResultMap">
    select p.protocol_product_service_id, s.name, p.pricing_rule, p.service_id
    from protocol_product_service as p left join
    (select serv_id, no, name from v_serv
    where airport_code = #{airportCode,jdbcType=VARCHAR} and service_type_allocation_id = #{typeId,jdbcType=BIGINT} and is_deleted = 0) as s
    on p.service_id = s.serv_id
    where p.airport_code = #{airportCode,jdbcType=VARCHAR} and p.service_type_allocation_id = #{typeId,jdbcType=BIGINT} and p.is_deleted = 0
    and p.protocol_product_id = #{protocolProductId,jdbcType=BIGINT}
  </select>

  <select id="getListCount" parameterType="map" resultType="int">
     select count(s.serv_id)
    from protocol_product_service as p left join
    (select serv_id, no, name from v_serv
    where airport_code = #{airportCode,jdbcType=VARCHAR} and service_type_allocation_id = #{typeId,jdbcType=BIGINT} and is_deleted = 0) as s
    on p.service_id = s.serv_id
    where p.airport_code = #{airportCode,jdbcType=VARCHAR} and p.service_type_allocation_id = #{typeId,jdbcType=BIGINT} and p.is_deleted = 0
    and p.protocol_product_id = #{protocolProductId,jdbcType=BIGINT}
  </select>

  <update id="deleteByProtocolProductId">
    update protocol_product_service
    SET is_deleted = 1, update_time = CURRENT_TIMESTAMP
    <if test="updateUser != null">
      ,update_user = #{updateUser}
    </if>
    WHERE airport_code = #{airportCode}
    and protocol_product_id = #{protocolProductId}
  </update>

  <insert id="insertBySelective" parameterType="com.zhiweicloud.guest.model.ProtocolProductServ">
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="protocolProductServiceId">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into protocol_product_service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="airportCode != null">
        airport_code,
      </if>
      <if test="protocolProductServiceId != null">
        protocol_product_service_id,
      </if>
      <if test="protocolProductId != null">
        protocol_product_id,
      </if>
      <if test="serviceTypeAllocationId != null">
        service_type_allocation_id,
      </if>
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="pricingRule != null">
        pricing_rule,
      </if>
      <if test="isPricing != null">
        is_pricing,
      </if>
      <if test="isPrioritized != null">
        is_prioritized,
      </if>
      <if test="isAvailabled != null">
        is_availabled,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="airportCode != null">
        #{airportCode,jdbcType=VARCHAR},
      </if>
      <if test="protocolProductServiceId != null">
        #{protocolProductServiceId,jdbcType=BIGINT},
      </if>
      <if test="protocolProductId != null">
        #{protocolProductId,jdbcType=BIGINT},
      </if>
      <if test="serviceTypeAllocationId != null">
        #{serviceTypeAllocationId,jdbcType=BIGINT},
      </if>
      <if test="serviceId != null">
        #{serviceId,jdbcType=BIGINT},
      </if>
      <if test="pricingRule != null">
        #{pricingRule,jdbcType=OTHER},
      </if>
      <if test="isPricing != null">
        #{isPricing,jdbcType=BIT},
      </if>
      <if test="isPrioritized != null">
        #{isPrioritized,jdbcType=BIT},
      </if>
      <if test="isAvailabled != null">
        #{isAvailabled,jdbcType=BIT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
</mapper>